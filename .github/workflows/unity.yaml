name: Ninsar CI

on:
  push:
    branches: [main]
    tags-ignore: ["v*"]
  pull_request:
    branches: [main]
  create:
    tags: ["v*"]
    branches: [main]

jobs:

  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [Android, iOS]
        solution: ['./${{ github.event.repository.name }}.sln']
      
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
          submodules: 'recursive'

      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.platform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.platform }}
            Library-
      
      - name: Run Tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      
  build:
    if: github.ref != 'refs/heads/main' # To run only on PRs & Tags
    needs: test
    strategy:
      fail-fast: true
      matrix:
        platform: [Android, iOS]
        build-aab: [true]
        sign: [false]
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
          submodules: 'recursive'

      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.platform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.platform }}
            Library-

      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.platform }}
          buildsPath: Builds
          buildName: ${{ matrix.platform == 'iOS' && 'xcode' || matrix.platform}}
          versioning: Tag
          androidAppBundle: false
          androidKeystoreName: ${{ matrix.sign && 'user.keystore' || '' }}
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}

      - name: Build .aab if Android and aab build is enabled
        if: matrix.platform == 'Android' && matrix.build-aab
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.platform }}
          buildsPath: Builds
          versioning: Tag
          androidAppBundle: true
          androidKeystoreName: ${{ matrix.sign && 'user.keystore' || '' }}
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}

      - name: Build .apk if Android
        if: matrix.platform == 'Android'
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.platform }}
          buildsPath: Builds
          versioning: Tag
          androidAppBundle: false
          androidKeystoreName: ${{ matrix.sign && 'user.keystore' || '' }}
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}

      - name: Build .ipa if iOS
        run: echo "Build goes here"
        
        
      - name: Cleanup Xcode project if iOS
        run: rm -rf Builds/xcode

      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{matrix.platform}}
          path: Builds/${{matrix.platform}}
          retention-days: 1
  
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          path: Builds/
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: Builds/*