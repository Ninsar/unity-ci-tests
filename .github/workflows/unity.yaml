name: Ninsar CI

on:
  push:
    branches: [main]
    tags-ignore: ["v*"]
  pull_request:
    branches: [main]
  create:
    tags: ["v*"]
    branches: [main]

jobs:

  build:
    if: github.ref != 'refs/heads/main' # To run only on PRs & Tags
    strategy:
      fail-fast: true
      matrix:
        unity-version: [2020.3.15f1]
        platform: [Android]
        sign: [false]
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
          submodules: 'recursive'

      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.unity-version }}-${{ matrix.platform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.unity-version }}-${{ matrix.platform }}
            Library-${{ matrix.unity-version }}
            Library-

      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.platform }}
          unityVersion: ${{ matrix.unity-version }}
          buildsPath: Builds
          versioning: Tag
          androidAppBundle: false
          androidKeystoreName: ${{ matrix.sign && 'user.keystore' || '' }}
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}

      - name: Build .aab if Android
        if: matrix.platform == 'Android'
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.platform }}
          unityVersion: ${{ matrix.unity-version }}
          buildsPath: Builds
          versioning: Tag
          androidAppBundle: true
          androidKeystoreName: ${{ matrix.sign && 'user.keystore' || '' }}
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}

      # - name: Build .ipa if iOS
        
        
      - name: Cleanup Xcode project if iOS
        run: find . -type d | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/| - \1/"

      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{matrix.platform}}
          path: Builds/${{matrix.platform}}
          retention-days: 5
  
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          path: Builds/
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: Builds/*

  # publish:
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   needs: build
  #   runs-on: ubuntu-latest